<% display_only ||= false %>
<div data-hook="admin_return_authorization_form_fields">
  <table class="table table-condensed table-bordered index return-items-table" style="font-size: 85%;">

    <col width="8%" valign="middle">
    <col width="20%" valign="middle">
    <col width="12%" valign="middle">
    <col width="12%" valign="middle">
    <col width="7%" valign="middle">
    <col width="17%" valign="middle">
    <col width="14%" valign="middle">
    <col width="9%" valign="middle">

    <thead>
      <tr data-hook="rma_header">
        <th class="text-center"><%= @return_authorization.persisted? ? Spree.t(:selected) : Spree.t(:select) %></th>
        <th><%= Spree.t(:product) %></th>
        <th class="text-center"><%= Spree.t(:product_status) %></th>
        <th class="text-center"><%= Spree.t(:return_status) %></th>
        <th class="text-center"><%= Spree.t(:charged) %></th>
        <th class="text-center"><%= Spree.t(:purchased_quantity) %></th>
        <th class="text-center"><%= Spree.t(:return_quantity) %></th>
        <th class="text-center"><%= Spree.t(:resellable) %></th>
      </tr>
    </thead>
    <tbody>
      <% grouped_return_items_by_shipment(@form_return_items).each do |shipment,return_items| %>
        <% if shipment.shipped? %>
          <% if return_items.any?(&:returnable?) %>
            <tr>
              <td></td>
              <td colspan="7" class="font-weight-bold"><%= Spree.t(:from) %> <span><%= shipment.stock_location.name %></span></td>
            </tr>
          <% end %>
          <%= f.fields_for :return_items, return_items do |item_fields| %>
            <% return_item = item_fields.object %>
            <% inventory_unit = return_item.inventory_unit %>

            <% editable ||= inventory_unit.shipped? && @return_authorization.allow_return_item_changes? && !return_item.reimbursement && line_item_returnable?(inventory_unit.line_item) && @return_authorization.new_record? %>

            <% if return_item.returnable? %>
              <tr>
                <td class="inventory-unit-checkbox" align="center">
                  <% if editable %>
                    <%= item_fields.hidden_field :inventory_unit_id %>
                    <%= item_fields.check_box :_destroy, { checked: return_item.persisted?, class: 'add-item', "data-price" => return_item.pre_tax_amount, readonly: true }, '0', '1' %>
                  <% elsif @return_authorization.persisted? %>  <!-- show checkbox only for show -->
                    <%= item_fields.check_box :_destroy, { checked: return_item.persisted?, class: 'add-item', "data-price" => return_item.pre_tax_amount, readonly: true, disabled: 'disabled' }, '0', '1' %>
                  <% end %>
                </td>
                <td>
                  <div class="variant-name"><%= inventory_unit.variant.name %></div>
                  <div class="variant-options"><%= inventory_unit.variant.options_text %></div>
                </td>
                <td align="center"><%= inventory_unit.state.humanize %></td>
                <td align="center"><%= return_item.reception_status %></td>
                <td align="center">
                  <% return_item.set_default_pre_tax_amount %>  <!-- needed when form has errors, and object loses its value -->
                  <%= return_item.display_pre_tax_amount %>
                </td>
                <td class="purchased-quantity" align="center">
                  <%= inventory_unit.quantity %>
                </td>
                <td align="center">
                  <% if editable %>
                    <%= item_fields.number_field :return_quantity, { class: 'refund-quantity-input form-control w-50', min: 0, max: return_item.return_quantity } %>
                  <% else %>
                    <%= return_item.return_quantity %>
                  <% end %>
                </td>
                <td class="inventory-unit-checkbox" align="center">
                  <%= item_fields.check_box :resellable, { checked: true, class: 'add-item disabled', required: true }, '0', '1' %>
                </td>
              </tr>
            <% end %>
          <% end %>
        <% end %>
      <% end %>
    </tbody>
  </table>

  <% unless @return_authorization.persisted? %>
    <%= f.field_container :reason, class: ['form-group'] do %>
      <%= f.label :reason, Spree.t(:reason) %>

      <%= f.select :return_authorization_reason_id, @return_authorization_reasons.collect{ |r|[r.name, r.id] }, { include_blank: true }, { class: 'form-control add-item', "data-placeholder" => Spree.t(:select_a_return_authorization_reason), disabled: display_only } %>
      <%= f.error_message_on :reason %>
    <% end %>
  <% end %>
</div>